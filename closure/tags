!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/feng/mine/C/closure/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
base	main.c	/^    struct counter_i *base;$/;"	m	struct:normal_counter	typeref:struct:counter_i *	file:
base	test.c	/^    struct counter_i *base;$/;"	m	struct:normal_counter	typeref:struct:counter_i *	file:
count	main.c	/^    int count;$/;"	m	struct:normal_counter	typeref:typename:int	file:
count	test.c	/^    int count;$/;"	m	struct:normal_counter	typeref:typename:int	file:
counter_i	main.c	/^struct counter_i$/;"	s	file:
counter_i	test.c	/^struct counter_i$/;"	s	file:
get_normal_counter	main.c	/^struct normal_counter *get_normal_counter()$/;"	f	typeref:struct:normal_counter *
increase	main.c	/^    increase_fn increase;$/;"	m	struct:counter_i	typeref:typename:increase_fn	file:
increase	test.c	/^    increase_fn increase;$/;"	m	struct:counter_i	typeref:typename:increase_fn	file:
increase_fn	main.c	/^typedef void (*increase_fn)(void *counter);$/;"	t	typeref:typename:void (*)(void * counter)	file:
increase_fn	test.c	/^typedef void (*increase_fn)(void *counter);$/;"	t	typeref:typename:void (*)(void * counter)	file:
main	main.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	test.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
normal_counter	main.c	/^struct normal_counter$/;"	s	file:
normal_counter	test.c	/^struct normal_counter$/;"	s	file:
normal_counter_increase	test.c	/^int normal_counter_increase(struct normal_counter *self)$/;"	f	typeref:typename:int
normal_counter_init	test.c	/^void normal_counter_init(struct normal_counter *self)$/;"	f	typeref:typename:void
normal_counter_interface	test.c	/^static const struct counter_i normal_counter_interface = {$/;"	v	typeref:typename:const struct counter_i	file:
normal_increase	main.c	/^static void normal_increase(void *counter)$/;"	f	typeref:typename:void	file:
